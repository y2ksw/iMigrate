<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADEAAAAxCAMAAABEQrEuAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEmUExURf///8ff///OWY+8+F2R0GOW0laOzPrKVWCT0aR5Epa76n6q3+u7SanJ8miZ1ad+HMLc
        /bnV+bHP9a3M9HOg18iucvfGUue3RtusPMWYLMGUKerx+Y615nao5Zm64num3HOi22ub1v3MV9anONGj
        NbGFHK2BGcXe/vf6/f38+qDC7p7B7ff065284oSu4oCp2+7m0+PWttG7iMmxdbqZTcqdMKh9Fvv8/u70
        +t7p9oy69srb8LXN6mue3PLCT+OzQ6+KMsibLr6RJsPc/b3Y++Tt+Iq49MXY7sPW7oCv7Iy05Yqx4vHr
        3N/QrdvLo7eVRKqCJbuOI7WJIM/f8czc8KjE5drIns22f72fV7ydU86gMoKx7sDV7KDA4vLs3urgydfE
        l8SoZ6NSJIQAAAJ9SURBVEhL7ZRXd6JAFIAVhxVEJRYUMcaGWGJvUTeWmGKMiSV1k+3//0/sDFwVPSqc
        s/u434PO3Lnf9MHyV5QFfl7NQ8UM96xoD8gs1MxQS1KY0BSqJuDtxHDWoWqCeYAYQWxU3gdfKhA9RFUm
        hlSx1BbBXn9Rg/AB8uyFMzgULNUQMRNSFeKHeJ3VHyxZVp0dFWCzEDai/KgKFJW6h4gRP1JgKOYOMz+t
        DoKqEOQHv39C9ABvzZAcal5goZdK9sTHmtFa3obkFO3DlBxiyQ1INAz2uJxSj50KKGwyoZaoxeGTFEQ1
        66MphZSGtsfBd2jbzcxJkhoSHikhk8XgGfLQtps62aWeok1I6pNfA+NXA+fIHySTovpD8mtwlbMsnlZD
        fSY4Vz176QHa9jBtinZRvYgUJZKFJAVo2UtZYBUyEF6A4kw4JWH/3cqEoZDNvzbFgL2fGvD8DKZ01tL+
        NyjE6dLJ+ZPqlYU5v3qDreeXEoPcUFszKlqPvLljTufhrtvnJ3435/Bd+tBnLbTimvZZNTQPMQyDSrR/
        kvNoYR+zqWSiDq1hCfb8nO8SaoQtpXAH8TUODm32sqG06dix6whaNDy0BzFXUCFcnXL0NeRj8BInaMO6
        c1hRZDWy1xGLnzxnIHsJ8jqiq7Fc8bQVdWgXLqZdE7c78gmy9CDSurSiOBfZxhyeC9ON3Nhs+wyCanG4
        gGy2Lh0bd2yEQwYhTfYVG1o2wchQwcaa/4aef2vc7L4l8HZWrIxxl35ZfgX0FPzu4qne0gzcfWl0Bjnb
        tEYbFjG+dunvulexi9Yt/hZoFupE6Oi37UexkzC24sUcYgptiJghfEu7TXVvjMXyB6w1R71e98uBAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAA4LWPAOfCpABisdIA+O7mAEm14wD15tsASp7BAOvRuwDxyaoA2qN2APi8jwBLve0A4O3zAOrN
        tQAwmMQASq/aAOGtgwD82b8A8d7PANedbQD/38cA6cmvANGUXQDz4tQAM6DOAO61hwDvxaMA8NrJAPPL
        qwBHl7kA1phiAD2t3ADlqHgA05VhADSi0ADw3MsAWc7/APO3iQApj7kAIIKqAOq+mwD82sEA3qyCAJHA
        1ADzyqsAudfkAFPH9wD3u40A7cCdACWErADwxqUAOajWAFa23QD05dgATcDwAOCsgQD62L0ARLXkAOzA
        nADh7vMAWM3+AE7C8gCex9kA0+buAE/C8gD82r8Au9nlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABgWAAAAAAAAAAAAADYKHRUVISYBAAAAAAAAAAQVFRUVFSELCwsXAAAAAAAEFRUV
        FRUhCwsLHwAAAAAABBUVFRUVIQsLCx8AAAAAAAQVQjs4FSEUGjAfAAAAAAgpLRUVFRsiFRUVMQIAAAAA
        EhUVOTMRKwkVFSoGAAAAACQcAAAeNSxAABMOAAAAAAAAADJBJSU0JT8AAAAAAAAAAAA3JQwlICUPAAAA
        AAAAAAAAByU+Iy89QwAAAAAAAAAAAAANJSUZAAAAAAAAAAAAADwFLjolAwAAAAAAAAAAAAAnJRAAAAAA
        AAAAAAAAAAAAACgAAAAAAAAAAAAAAP5/AADgHwAAwAcAAMAHAADABwAAwAcAAIADAADAAwAAzCcAAPAf
        AADwHwAA8B8AAPh/AADgfwAA4/8AAPf/AAA=
</value>
  </data>
</root>